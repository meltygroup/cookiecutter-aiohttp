[flake8]
;E203 for black (whitespace before : in slices), and F811 for @overload
ignore = E203, F811
max-line-length = 88

[tox]
envlist = py36,py37,black,pylint,bandit,mypy,pycodestyle{% if cookiecutter.has_docs == "y" %},docs{% endif %}
isolated_build = True
skip_missing_interpreters = True

[coverage:run]
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == "__main__":

ignore_errors = False
fail_under = 100

[testenv]
deps = -r requirements-dev.txt
commands = pytest --cov-report term-missing --cov={{ cookiecutter.project_slug }}

[testenv:black]
deps = flake8
commands = black --diff --check {{ cookiecutter.project_slug }}

[testenv:flake8]
deps = flake8
skip_install = True
commands = flake8 tests/ {{ cookiecutter.project_slug }}

[testenv:pylint]
commands = pylint -rn {{ cookiecutter.project_slug }}

[testenv:bandit]
deps = bandit
skip_install = True
commands = bandit -r {{ cookiecutter.project_slug }}

[testenv:mypy]
deps = mypy
commands = mypy --ignore-missing-imports {{ cookiecutter.project_slug }} tests

[testenv:pydocstyle]
deps = pydocstyle
skip_install = True
commands = pydocstyle oeis.py

{% if cookiecutter.has_docs == "n" %}#{% endif %}[testenv:docs]
{% if cookiecutter.has_docs == "n" %}#{% endif %}deps = sphinx
{% if cookiecutter.has_docs == "n" %}#{% endif %}commands = sphinx-build -b html docs dist/docs
